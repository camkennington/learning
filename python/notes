# check python version
  #sys is a built-in module that contains many system-specific parameters and functions, including the Python version in use. Before using it, we must explictly import it.

import sys
print(sys.version)



# Print the element on the 13th index in the string
  #Because indexing starts at 0, it means the first index is on the index 0.

print(name[13])



Stride

# Get every second element in the range from index 0 to index 4
name[0:5:2]


Escape Sequence
# New line escape sequence
print(" Michael Jackson \n is the best" )

# Tab escape sequence
print(" Michael Jackson \t is the best" )

# Include back slash in string
print(" Michael Jackson \\ is the best" ) = Michael Jackson \ is the best


# r will tell python that string will be display as raw string
print(r" Michael Jackson \ is the best" )



# Replace the old substring with the new target substring is the segment has been found in the string
a = "Michael Jackson is the best"
b = a.replace('Michael', 'Janet')
b


# Find the substring in the string. Only the index of the first elment of substring in string will be the output
name = "Michael Jackson"
name.find('el')

print(r"\ ")

#Convert the variable f to uppercase:
print(f.upper())


----------------------------------------------------------------------------------------------------------------------------------------------------------------

# Create a list
L = ["Cameron Kennington" , 29.3, 1992, "Feast"]


# Print the elements on each index
print('the same element using negative and positive indexing:\n Postive:',L[0],
'\n Negative:' , L[-3]  )
print('the same element using negative and positive indexing:\n Postive:',L[1],
'\n Negative:' , L[-2]  )
print('the same element using negative and positive indexing:\n Postive:',L[2],
'\n Negative:' , L[-1]  )


# Sample List
L = ["Michael Jackson", 10.1,1982,"MJ",1]

# List slicing
L[3:5]  =    ['MJ', 1]


#We can use the method extend to add new elements to the list:
 # Use extend to add elements to list
L = [ "Michael Jackson", 10.2]
L.extend(['pop', 10])     ==      ['Michael Jackson', 10.2, 'pop', 10]



