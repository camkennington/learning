CLASSES
The first step in creating a class is giving it a name. In this notebook, we will create two classes: Circle and Rectangle. We need to determine all the data that make up that class, which we call attributes. Think about this step as creating a blue print that we will use to create objects. In figure 1 we see two classes, Circle and Rectangle. Each has their attributes, which are variables. The class Circle has the attribute radius and color, while the Rectangle class has the attribute height and width.

METHODS
Methods give you a way to change or interact with the object; they are functions that interact with objects. For example, letâ€™s say we would like to increase the radius of a circle by a specified amount. We can create a method called add_radius(r) that increases the radius by r. 

CREATING A CLASS

# Import the library used to draw objects
import matplotlib.pyplot as plt
%matplotlib inline  

#first step is use the class keyword, then the name of the class
class Circle (object):

#The next step is a special method called a constructor __init__, which is used to initialize the object. The inputs are data attributes.
#The term self contains all the attributes in the set. For example the self.color gives the value of the attribute color and self.radius will give you the radius of the object.
#We also have the method add_radius() with the parameter r, the method adds the value of r to the attribute radius.

# Create a class Circle
class Circle(object):
    
    # Constructor
    def __init__(self, radius=3, color='blue'):
        self.radius = radius
        self.color = color 
    
    # Method
    def add_radius(self, r):
        self.radius = self.radius + r
        return(self.radius)
    
    # Method
    def drawCircle(self):
        plt.gca().add_patch(plt.Circle((0, 0), radius=self.radius, fc=self.color))
        plt.axis('scaled')
        plt.show()
        
  ----------------------------------------------------------------------------------------------------------------------------------------      
CREATING AN INSTANCE OF A CLASS CIRCLE

# Create an object RedCircle
RedCircle = Circle(10, 'red')

# Find out the methods can be used on the object RedCircle
dir(RedCircle)

# Print the object attribute radius
RedCircle.radius

# Print the object attribute color
RedCircle.color

# Set the object attribute radius
RedCircle.radius = 1
RedCircle.radius

# Call the method drawCircle
RedCircle.drawCircle()

# Use method to change the object attribute radius
print('Radius of object:',RedCircle.radius)
RedCircle.add_radius(10)
print('Radius of object of after applying the method add_radius(2):',RedCircle.radius)
RedCircle.add_radius(10)
print('Radius of object of after applying the method add_radius(5):',RedCircle.radius)


# Create a blue circle with a given radius
BlueCircle = Circle(radius=100)



